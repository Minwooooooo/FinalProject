참고 : https://docs.spring.io/spring-security/site/docs/5.4.2/reference/html5/#servlet-security-filters
1. Spring Security의 FilterChain 순서
    #확인하는 방법
    WebSecurityConfigurerAdapter을 상속받아 Filter Chain을 만드는 Class위에 @EnableWebSecurity(debug = true)어노테이션을 붙여주면 현재 실행되는 Security Fiter들을 확인할 수 있다.



  DisableEncodeUrlFilter

  WebAsyncManagerIntegrationFilter

  SecurityContextPersistenceFilter

  HeaderWriterFilter
   : request의 헤더를 확인하여 추가하거나 빼는 역할

  CorsFilter
   : 허가된 사이트나 클라이언트의 요청인지 확인

  LogoutFilter
   : request가 로그아웃시도를 하는지 확인

  RequestCacheAwareFilter
   : 쿠키 또는 세션에 값이 있는지 확인
     값이 없으면 기존 request를 다음 필터로 위임
     값이 있으면 request를 래핑하여 다음 필터로 위임

  SecurityContextHolderAwareRequestFilter
   : ROLE_이란 prefix를 셋팅, request와 response 를 가공하여 다음 필터로 위임

  AnonymousAuthenticationFilter
   : SecurityContextHolder에 Authentication 값이 없으면 anonymous 권한으로 셋팅하여 다음 필터로 위임

  SessionManagementFilter
   : 세션이 있는지 확인
     없을경우 anonymous 권한인지 확인하여 맞으면 다음 필터로 위임
      아니면 SecurityContextHolder.getContext를 세션으로 저장

  ExceptionTranslationFilter
   : 이후 필터에 인증이나 권한 예외가 발생하면 처리하는 역할

  FilterSecurityInterceptor
   : 사용자가 요청한 request에 결과를 리턴해도 되는 권한이 있는지 확인
